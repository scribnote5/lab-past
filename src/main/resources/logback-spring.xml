<?xml version="1.0" encoding="UTF-8"?>
<!-- Log Level -->
<!-- logger의 기본 출력 레벨을 지정한다. 해당 레벨 이하를 포함한다. -->
<!-- ALL > TRACE > DEBUG > INFO > WARN > ERROR > FATAL > OFF -->

<configuration>
    <!-- Spring boot 처음할 때 출력되는 log 삭제 -->
    <statusListener class="ch.qos.logback.core.status.NopStatusListener" />

    <!-- 콘솔 출력 설정 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>
				<!-- 출력 패턴 -->
				<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-3level %logger{5} - %msg %n</pattern>
			</Pattern>
		</layout>
	</appender>
    
    <!-- 파일 출력 설정 -->
    <appender name="ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 파일경로/파일명 -->
        <file>log/logFile.log</file>
        
        <encoder>
        	<!-- 출력 패턴 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-3level %logger{5} - %msg %n</pattern>
        </encoder>
        
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 파일명 패턴 방식 -->
            <fileNamePattern>log/logFile_%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <!-- 30일 지난 파일은 삭제 -->
            <maxHistory>30</maxHistory> 
           
            <!-- 파일 최대 용량 설정하면 새로운 index 이름으로 파일 생성 -->
    	    <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 설정 용량 도달시 새로운 index(%i)로 파일 생성 -->
                <!-- KB, MB, GB 인식 -->
                <maxFileSize>1MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    
    <!-- log4jdbc -->
	<!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
	<logger name="jdbc.sqlonly" level="OFF"/>
	<!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
	<logger name="jdbc.sqltiming" level="OFF"/>
	<!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
	<logger name="jdbc.audit" level="OFF"/>
	<!--  ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성한다. -->
	<logger name="jdbc.resultset" level="OFF"/>
	<!-- SQL 결과 조회된 데이터의 table 로그를 남긴다. -->
	<logger name="jdbc.resultsettable" level="OFF"/>
    <!-- Connection 정보 로그를 남긴다. -->
	<logger name="jdbc.connection" level="OFF"/>
	
    <!-- appender 새로 등록시 추가 필요 -->
	<root level="INFO">
		<appender-ref ref="STDOUT" />
		<!-- 파일로 로그 기록을 남기기 위해서는 하단 주석 해제 -->
        <!-- <appender-ref ref="ROLLING" /> -->
	</root>
</configuration>